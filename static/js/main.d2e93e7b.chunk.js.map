{"version":3,"sources":["redux/store.js","redux/reducer/pincode.js","assets/beep.mp3","redux/reducer/result.js","redux/reducer/index.js","view/fetch.js","view/GoogleAd.jsx","view/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["middleware","pincodeSlice","createSlice","name","initialState","pincodes","reducers","add","state","payload","newArr","Array","from","push","filter","el","index","ar","indexOf","remove","actions","result","soundEnabled","audio","Audio","beep","resultSlice","changeResult","pincode","deleteResult","combinedReducer","combineReducers","store","createStore","rootReducer","thunkMiddleware","applyMiddleware","sleepNow","delay","Promise","resolve","setTimeout","getDateReprestation","date","dd","getDate","mm","getMonth","getFullYear","getDates","today","Date","tomorrow","setDate","fetchByPincode","a","dates","getState","status","j","length","url","axios","get","then","res","data","centers","availability","resultFound","c","s","sessions","available_capacity","dispatch","catch","err","fetchIteratively","timeToSleep","GoogleAd","googleInit","timeout","this","props","window","adsbygoogle","clearTimeout","classNames","slot","className","style","display","data-ad-client","data-ad-slot","data-ad-format","data-full-width-responsive","Component","defaultProps","Home","useState","setPincode","pincodeError","setPinCodeError","useSelector","useDispatch","wrongPincodes","useEffect","addEventListener","currentTime","play","muted","flag","Object","keys","forEach","key","paused","pause","Container","fluid","minHeight","position","flexDirection","height","Header","inverted","textAlign","flexGrow","Divider","hidden","section","size","Segment","basic","Form","error","onSubmit","Input","value","type","onChange","evt","test","action","color","content","disabled","Message","header","Grid","stackable","columns","map","Column","Card","Content","Icon","float","cursor","onClick","List","bulleted","center","Item","Boolean","join","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2e93e7b.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducer/index\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst bindMiddleware = (middleware) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    const { composeWithDevTools } = require(\"redux-devtools-extension\");\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n  return applyMiddleware(...middleware);\n};\n\nexport const store = createStore(\n  rootReducer,\n  bindMiddleware([thunkMiddleware])\n);\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  pincodes: [],\n};\n\nconst pincodeSlice = createSlice({\n  name: \"player2\",\n  initialState,\n  reducers: {\n    add(state, { payload }) {\n      const newArr = Array.from(state.pincodes);\n      newArr.push(payload);\n      state.pincodes = newArr.filter(\n        (el, index, ar) => ar.indexOf(el) === index\n      );\n    },\n    remove(state, { payload }) {\n      state.pincodes = state.pincodes.filter((el) => el !== payload);\n    },\n  },\n});\n\nexport const { add, remove } = pincodeSlice.actions;\n\nexport default pincodeSlice.reducer;\n","export default __webpack_public_path__ + \"static/media/beep.44d80d2e.mp3\";","import { createSlice } from \"@reduxjs/toolkit\";\nimport beep from \"../../assets/beep.mp3\";\n\nconst initialState = {\n  result: {},\n  soundEnabled: true,\n  audio: new Audio(beep),\n};\n\nconst resultSlice = createSlice({\n  name: \"player2\",\n  initialState,\n  reducers: {\n    changeResult(state, { payload }) {\n      state.result[payload.pincode] = payload.result;\n    },\n    deleteResult(state, { payload }) {\n      delete state.result[payload];\n    },\n  },\n});\n\nexport const { changeResult, deleteResult } = resultSlice.actions;\n\nexport default resultSlice.reducer;\n","import { combineReducers } from \"redux\";\nimport pincodes from \"./pincode\";\nimport result from \"./result\";\nconst combinedReducer = combineReducers({ pincodes, result });\n\nexport default combinedReducer;\n","import axios from \"axios\";\nimport { changeResult } from \"../redux/reducer/result\";\nimport { store } from \"../redux/store\";\n\nconst sleepNow = (delay) =>\n  new Promise((resolve) => setTimeout(resolve, delay));\n\nconst getDateReprestation = (date) => {\n  let dd = date.getDate();\n  let mm = date.getMonth() + 1;\n  let yyyy = date.getFullYear();\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n  const strRepresent = dd + \"-\" + mm + \"-\" + yyyy;\n  return strRepresent;\n};\n\nconst getDates = () => {\n  const today = new Date();\n  const tomorrow = new Date(today);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  const date = [getDateReprestation(tomorrow)];\n  return date;\n};\n\nconst fetchByPincode = async () => {\n  const dates = getDates();\n  const result = store.getState().result.result;\n  const pincodes = store.getState().pincodes.pincodes.filter((pincode) => {\n    return (\n      result[pincode].status === \"finding\" || result[pincode].status === \"error\"\n    );\n  });\n  for (const pincode of pincodes) {\n    for (let j = 0; j < dates.length; j++) {\n      let url = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=${pincode}&date=${dates[j]}`;\n      axios\n        .get(url)\n        .then((res) => {\n          let data = res.data;\n          let centers = [];\n          let availability = 0;\n          let resultFound = false;\n          for (const c in data.centers) {\n            for (const s in data.centers[c].sessions) {\n              if (data.centers[c].sessions[s].available_capacity > 0) {\n                resultFound = true;\n                availability += data.centers[c].sessions[s].available_capacity;\n                centers.push(data.centers[c].name);\n              }\n            }\n          }\n          if (resultFound === false) {\n            store.dispatch(\n              changeResult({\n                pincode,\n                result: {\n                  status: \"finding\",\n                  availability: 0,\n                  centers: [],\n                },\n              })\n            );\n          } else {\n            store.dispatch(\n              changeResult({\n                pincode,\n                result: {\n                  status: \"found\",\n                  availability,\n                  centers,\n                },\n              })\n            );\n          }\n        })\n        .catch((err) => {\n          store.dispatch(\n            changeResult({\n              pincode,\n              result: {\n                status: \"error\",\n                availability: 0,\n                centers: [],\n              },\n            })\n          );\n        });\n    }\n  }\n};\n\nconst fetchIteratively = async () => {\n  while (true) {\n    fetchByPincode();\n    const timeToSleep = store.getState().pincodes.pincodes.length * 5;\n    await sleepNow(timeToSleep * 1000);\n  }\n};\n\nexport { fetchIteratively };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst googleAdId = \"ca-pub-9552396768426571\";\n\nclass GoogleAd extends Component {\n  googleInit = null;\n\n  componentDidMount() {\n    const { timeout } = this.props;\n    this.googleInit = setTimeout(() => {\n      if (typeof window !== \"undefined\")\n        (window.adsbygoogle = window.adsbygoogle || []).push({});\n    }, timeout);\n  }\n\n  componentWillUnmount() {\n    if (this.googleInit) clearTimeout(this.googleInit);\n  }\n\n  render() {\n    const { classNames, slot } = this.props;\n    return (\n      <div className={classNames}>\n        <ins\n          className=\"adsbygoogle\"\n          style={{ display: \"block\" }}\n          data-ad-client={googleAdId}\n          data-ad-slot={slot}\n          data-ad-format=\"auto\"\n          data-full-width-responsive=\"true\"\n        ></ins>\n      </div>\n    );\n  }\n}\n\nGoogleAd.propTypes = {\n  classNames: PropTypes.string,\n  slot: PropTypes.string,\n  timeout: PropTypes.number,\n};\n\nGoogleAd.defaultProps = {\n  classNames: \"\",\n  timeout: 200,\n};\n\nexport default GoogleAd;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Card,\n  Container,\n  Divider,\n  Form,\n  Grid,\n  Header,\n  Icon,\n  List,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\nimport { add, remove } from \"../redux/reducer/pincode\";\nimport { changeResult, deleteResult } from \"../redux/reducer/result\";\nimport { fetchIteratively } from \"./fetch\";\nimport GoogleAd from \"./GoogleAd\";\n\nconst Home = () => {\n  const [pincode, setPincode] = useState(\"\");\n  const [pincodeError, setPinCodeError] = useState(\"\");\n  const pincodes = useSelector((state) => state.pincodes.pincodes);\n  const result = useSelector((state) => state.result.result);\n  const soundEnabled = useSelector((state) => state.result.soundEnabled);\n  const dispatch = useDispatch();\n  const audio = useSelector((state) => state.result.audio);\n  const wrongPincodes = pincodes.filter(\n    (pincode) => result[pincode].status === \"error\"\n  );\n  useEffect(() => {\n    fetchIteratively();\n  }, []);\n  useEffect(() => {\n    audio.addEventListener(\n      \"ended\",\n      function () {\n        this.currentTime = 0;\n        this.play();\n      },\n      false\n    );\n  }, [audio]);\n\n  useEffect(() => {\n    audio.muted = !soundEnabled;\n  }, [audio, soundEnabled]);\n\n  useEffect(() => {\n    let flag = true;\n    Object.keys(result).forEach((key) => {\n      if (result[key].status === \"found\") {\n        flag = false;\n        audio.paused && audio.play();\n      }\n    });\n    if (flag && !audio.paused) {\n      audio.pause();\n    }\n  }, [audio, result]);\n\n  return (\n    <Container\n      fluid\n      className=\"p-0\"\n      style={{\n        minHeight: \"100vh\",\n        position: \"relative\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n      }}\n    >\n      <Container fluid className=\"main-header-container\">\n        <Header inverted textAlign=\"center\" className=\"main-title\">\n          Covid Vaccine Tracker\n        </Header>\n      </Container>\n      <Container\n        fluid\n        style={{ flexDirection: \"3\", flexGrow: 1 }}\n        className=\"p-0\"\n      >\n        <Container>\n          <Divider hidden section />\n          <Header textAlign=\"center\" size=\"huge\">\n            Enter Pincode to set Alert\n          </Header>\n          <Segment basic>\n            <Form\n              error={pincodeError.length > 0}\n              onSubmit={() => {\n                if (pincode.length !== 6) {\n                  setPinCodeError(\"Pincode can only be of 6 digits\");\n                } else {\n                  dispatch(\n                    changeResult({\n                      pincode,\n                      result: {\n                        status: \"finding\",\n                        availability: 0,\n                        centers: [],\n                      },\n                    })\n                  );\n                  dispatch(add(pincode));\n                  setPinCodeError(\"\");\n                  setPincode(\"\");\n                }\n              }}\n            >\n              <Form.Input\n                value={pincode}\n                type=\"number\"\n                onChange={(evt, data) => {\n                  const newValue = data.value;\n                  if (newValue.length > 6) {\n                    setPinCodeError(\"Pincode cannot be more than 6 digits\");\n                  } else {\n                    setPinCodeError(\"\");\n                  }\n                  if (/^\\d*$/.test(data.value)) {\n                    setPincode(data.value);\n                  }\n                }}\n                action={{\n                  color: \"teal\",\n                  content: \"Go\",\n                  disabled: pincodeError.length > 0 || pincode.length !== 6,\n                }}\n              />\n              <Message error header=\"Action Forbidden\" content={pincodeError} />\n            </Form>\n          </Segment>\n        </Container>\n        <Container>\n          <Divider hidden />\n          {pincodes.length > 0 && (\n            <Segment textAlign=\"center\">\n              <Header>Gives Alert For Following Pincodes</Header>\n            </Segment>\n          )}\n          <Grid stackable columns={4}>\n            {pincodes.map((el, index) => {\n              return (\n                <Grid.Column key={index}>\n                  <Card color=\"teal\">\n                    <Card.Content>\n                      <Icon\n                        style={{ float: \"right\", cursor: \"pointer\" }}\n                        name=\"trash\"\n                        color=\"teal\"\n                        onClick={() => {\n                          dispatch(remove(el));\n                          dispatch(deleteResult(el));\n                        }}\n                      />\n                      <Card.Header>{el}</Card.Header>\n                    </Card.Content>\n                  </Card>\n                </Grid.Column>\n              );\n            })}\n          </Grid>\n        </Container>\n        <Container>\n          {pincodes\n            .map((pincode) => {\n              return (\n                result[pincode].status === \"found\" && (\n                  <>\n                    <Divider hidden />\n                    <Segment basic>\n                      <Header>\n                        Centers have been found in {pincode} with{\" \"}\n                        {result[pincode].availability} vaccines available:\n                      </Header>\n                      <List bulleted>\n                        {result[pincode].centers &&\n                          result[pincode].centers\n                            .filter(\n                              (center, index, ar) =>\n                                ar.indexOf(center) === index\n                            )\n                            .map((center) => <List.Item>{center}</List.Item>)}\n                      </List>\n                    </Segment>\n                  </>\n                )\n              );\n            })\n            .filter(Boolean)}\n        </Container>\n        <Divider hidden />\n        {wrongPincodes.length > 0 && (\n          <Container basic textAlign=\"center\">\n            <Message error>\n              Error occured in getting data for {wrongPincodes.join(\", \")}{\" \"}\n              {wrongPincodes.length > 1 ? \"pincodes\" : \"pincode\"}\n            </Message>\n          </Container>\n        )}\n        <GoogleAd slot={\"3472273087\"} />\n      </Container>\n      <Container fluid className=\"footer mt-4\">\n        <Header inverted textAlign=\"center\">\n          Keep Browser open in background in order for this app to work.\n          <br />\n          <br />\n          Also keep the volume of media as high as possible.\n        </Header>\n      </Container>\n    </Container>\n  );\n};\n\nexport default Home;\n","import \"fomantic-ui-css/semantic.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport Home from \"./view/Home\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Home />\n    </Provider>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}